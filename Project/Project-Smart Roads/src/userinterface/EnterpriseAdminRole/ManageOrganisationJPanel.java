/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EnterpriseAdminRole;

import business.Organisation.ConstructionOrganisation;
import business.Organisation.DriverOrganisation;
import business.Organisation.Organisation;
import business.Organisation.Organisation.OrganisationType;
import business.Organisation.OrganisationDirectory;
import business.Organisation.SensorsOrganisation;
import business.Organisation.TransportationOrganisation;
import business.Organisation.WeatherOrganisation;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aksha
 */
public class ManageOrganisationJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private OrganisationDirectory organisationDir;

    /**
     * Creates new form ManageOrganisationJPanel
     */
    public ManageOrganisationJPanel(JPanel userProcessContainer,OrganisationDirectory organisationDir) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organisationDir = organisationDir;
        populateComboBox();
        populateTable();
    }
     private void populateComboBox(){
        organisationJComboBox.removeAllItems();
        for (OrganisationType type : Organisation.OrganisationType.values()){
            
                organisationJComboBox.addItem(type);
        }
    }

    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel) organisationJTable.getModel();
        
        model.setRowCount(0);
        
        for (Organisation organisation : organisationDir.getOrganisationList()){
            Object[] row = new Object[2];
            row[0] = organisation.getOrganisationID();
            row[1] = organisation.getName();
            
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        organisationJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        organisationJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton.setText("<< ");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 290, -1, -1));

        organisationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organisationJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, 130));

        addJButton.setText("Add Organisation");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 290, -1, -1));

        organisationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(organisationJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 200, 120, -1));

        jLabel1.setText("Organisation Type ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        boolean flag = false;
        Organisation.OrganisationType type = (Organisation.OrganisationType) organisationJComboBox.getSelectedItem();
         for (Organisation org : organisationDir.getOrganisationList())
         {
             if((type.getValue().equals(OrganisationType.SensorsOrganisation.getValue()))&&(org instanceof SensorsOrganisation))
             {
                 flag = true;
                 break;
             }else if((type.getValue().equals(OrganisationType.WeatherOrganisation.getValue()))&&(org instanceof WeatherOrganisation))
             {
                 flag = true;
                 break;
             }else if((type.getValue().equals(OrganisationType.TransportationOrganisation.getValue())&&(org instanceof TransportationOrganisation)))
             {
                 flag = true;
                 break;
             }else if(type.getValue().equals(OrganisationType.DriverOrganisation.getValue())&&(org instanceof DriverOrganisation))
             {
                 flag = true;
                 break;
             }else if(type.getValue().equals(OrganisationType.ConstructionOrganisation.getValue())&&(org instanceof ConstructionOrganisation))
             {
                 flag = true;
                 break;
             }
         }
         if(flag == true)
         {
             JOptionPane.showMessageDialog(null,"Organisation Already Exists");
         }else
         {

        organisationDir.createAndAddOrganisation(type);
        populateTable();
         
         }
         
    }//GEN-LAST:event_addJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox organisationJComboBox;
    private javax.swing.JTable organisationJTable;
    // End of variables declaration//GEN-END:variables
}
