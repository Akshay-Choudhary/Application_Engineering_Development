/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SensorsAdmin;

import business.Enterprise.Enterprise;
import business.Organisation.Organisation;
import business.Organisation.SensorsOrganisation;
import business.Organisation.WeatherOrganisation;
import business.Sensor.WeatherSensor;
import business.Sensor.Sensor;
import business.UserAccount.UserAccount;
import business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Random;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.WeatherSensorThread;

/**
 *
 * @author aksha
 */
public class WeatherSensorParamJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organisation organisation;
    private Enterprise enterprise;
    private WeatherSensor weatherSensor;

    /**
     * Creates new form WeatherSensorParamJPanel
     */
    public WeatherSensorParamJPanel(JPanel userProcessContainer, UserAccount userAccount, Organisation organisation, Enterprise enterprise, WeatherSensor wSensor) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organisation = organisation;
        this.enterprise = enterprise;
        this.weatherSensor = wSensor;
        WeatherSensorThread wst = new WeatherSensorThread(userAccount, organisation, this, wSensor);
        wst.start();

    }

    public void populateTable() {

        DefaultTableModel model = (DefaultTableModel) weatherparamjTable3.getModel();

        Object[] row = new Object[5];
        row[0] = weatherSensor;
        row[1] = weatherSensor.getAmtOfRainfall();
        row[2] = weatherSensor.getTemperature();
        row[3] = weatherSensor.getWindSpeed();
        row[4] = weatherSensor.getStatus();
        model.addRow(row);
    }

    /* Object[][] row = new Object[6][2];
     for(int i=0;i<6;i++)
     for(int j=0;j<2;j++)
     {
     int value = rand.nextInt(50);
     row[i][j] = (value);
     model.addRow(row);
     } */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewActionsjButton7 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        weatherparamjTable3 = new javax.swing.JTable();
        actionjButton8 = new javax.swing.JButton();
        backjButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        viewActionsjButton7.setText("View Actions");
        viewActionsjButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionsjButton7ActionPerformed(evt);
            }
        });

        weatherparamjTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sensor", "Amt Of Rainfall", "Temperature", "Wind Speed", "Status"
            }
        ));
        jScrollPane4.setViewportView(weatherparamjTable3);

        actionjButton8.setText("Action");
        actionjButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionjButton8ActionPerformed(evt);
            }
        });

        backjButton1.setText("<<");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Wind Sensor Parameters");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(backjButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(actionjButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(52, 52, 52)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(actionjButton8)
                    .addComponent(backjButton1))
                .addGap(140, 140, 140))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewActionsjButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionsjButton7ActionPerformed


    }//GEN-LAST:event_viewActionsjButton7ActionPerformed

    private void actionjButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionjButton8ActionPerformed
        int selectedRow = weatherparamjTable3.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, " Please Select Sensor");

        } else {
            //WeatherSensor sensor = (WeatherSensor) weatherparamjTable3.getValueAt(selectedRow, 0);

            final JFrame dialog = new JFrame();
            dialog.pack();
            String message = JOptionPane.showInputDialog(dialog, "Type Messsage for Weather Manager", null);
            if (message.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter The Message To Be Sent");

            } else {
                WorkRequest request = new WorkRequest();
                request.setMessage(message);

                request.setStatus("Sent");
                request.setDriverAcknowledgement("Pending");

                Organisation org = null;
                for (Organisation organisation : enterprise.getOrganisationDir().getOrganisationList()) {
                    if (organisation instanceof WeatherOrganisation) {
                        org = organisation;
                        request.setOrganisation(organisation);
                        break;
                    }
                }
                if (org != null) {
                    org.getWorkQueue().getWorkRequestList().add(request);
                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                }
                JOptionPane.showMessageDialog(null, "Request Sent to Weather Manager");

                /*int selectedRow = weatherparamjTable3.getSelectedRow();

                 if (selectedRow < 0){
                 JOptionPane.showMessageDialog(null,"Please Select a Row");
                 return;
                 }

                 WorkRequest request = (WorkRequest)weatherparamjTable3.getValueAt(selectedRow, 0);*/
                /*WeatherSensorNotifyDriverJPanel ndwjp = new WeatherSensorNotifyDriverJPanel(userProcessContainer,userAccount,enterprise);
                 userProcessContainer.add("NotifyDriverJPanel",ndwjp);
                 CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                 layout.next(userProcessContainer);*/
            }
        }
    }//GEN-LAST:event_actionjButton8ActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);  // TODO add your handling code here:
    }//GEN-LAST:event_backjButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actionjButton8;
    private javax.swing.JButton backjButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton viewActionsjButton7;
    private javax.swing.JTable weatherparamjTable3;
    // End of variables declaration//GEN-END:variables
}
